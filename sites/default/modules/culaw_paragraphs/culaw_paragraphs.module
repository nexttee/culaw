<?php
/**
 * @file
 * Code for the CuLaw Paragraphs feature.
 */

include_once 'culaw_paragraphs.features.inc';


function culaw_paragraphs_preprocess_node(&$variables) {
    $node = $variables['node'];
    switch($node->type) {
        case 'landing_page':
            break;
        default:
            break;
    }

}

function culaw_paragraphs_preprocess_entity(&$variables) {
    if ($variables['entity_type'] == 'paragraphs_item') {
        $bundle_type = $variables['paragraphs_item']->bundle;
        switch ($bundle_type) {
            case 'layout_row':
                //dpm($variables);
                if (isset($variables['id'])) {
                    $variables['content']['row_id'] = array("#type"=>'field','#value'=>$variables['id']);
                }

                break;
            case 'quick_links_card':
            case 'section_navigation_card':
                //get parent headline
                $parent_bundle = $variables['paragraphs_item']->hostEntity();
                $headline = $parent_bundle->field_headline['und'][0]['value'];
                $variables['content']['field_headline'] = $headline;
                break;
            case 'media_card':
            case 'cta_card':
                $parent_bundle = $variables['paragraphs_item']->hostEntity();
                $variables['content']['style_option'] = culaw_paragraphs_format_class($parent_bundle->field_cta_options['und'][0]['value']);
            break;
            default;
                //print $variables['paragraphs_item']->bundle ;
                break;
        }
    }
}


function culaw_paragraphs_render_menu($menu) {
    $output = "";
    $menuItems = menu_tree_page_data($menu);
    foreach ($menuItems as $key => $m) {
        if ($m['link']['in_active_trail'] && $menuItems[$key]['below']) {
            $tree_output = menu_tree_output($menuItems[$key]['below']);
            $links = array();
            foreach($tree_output AS $key => $value) {
                if (is_numeric($key)) {
                    $links[] = array(
                        "title"=>$value['#title'],
                        "href"=>$value['#href'],
                        "attributes" => $value['#attributes']
                    );
                }
            }
            $groups = array_chunk($links,(int)ceil(count($links)/3));
            $output = "";
            foreach($groups AS $key => $value) {
                $output .= '<div class="col-sm-4 col-xs-12 same-height">'.theme('links', array('links' => $value, 'attributes' => array('class' => array('subnavigation-wrap__subnavigation-links', 'list-unstyled')), 'header' => array('text' => t('Main menu'), 'level' => 'h2', 'class' => array('element-invisible')))).'</div>';
            }
        }
    }
    print $output;
}

function culaw_paragraphs_format_class($var) {
    return str_replace(" ","-",strtolower($var));
}

//from paragraph template files
function _culaw_paragraphs_format_content($id, $format) {
    $node = node_load($id);
    switch($format) {
        case 'news_feed_row':
            $date = $node->created;
            //cls_mcl_event_datetime
            //$node->created
            break;
        case 'event_feed_row':
            $date = strtotime($node->cls_mcl_event_datetime['und'][0]['value']);
            break;
        default:
            break;
    }
    $summary = "";
    if (isset($node->body)) {
        $summary = $node->body['und'][0]['safe_summary'] != "" ? $node->body['und'][0]['safe_summary'] : strip_tags($node->body['und'][0]['safe_value']);
    }
    $date_array = array(
        'month' => date("M",$date),
        'day' => date("j",$date),
        'class' => date("Y-m-d",$date),
        'date' => date("F dS, Y",$date)
    );
    $row = array(
        'category' => 'News',
        'summary' => $summary,
        'date' => $date_array,
        'source' => $node->title,
        'url' => "/node/" . $node->nid
    );
    return $row;
}